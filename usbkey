#!/bin/bash

encryptedDriveName="keysandbackups"

function unlockUSBDrive {
    udisksctl unlock -b /dev/disk/by-partlabel/${encryptedDriveName}
	udisksctl mount -b /dev/disk/by-label/${encryptedDriveName}
	if [ $? -eq 0 ]; then
        echo ""
        echo "Usbkey unlocked"
    else
        echo ""
        echo "Usbkey failed to unlock"
        echo "Did you use the correct passphrase?"
        echo ""
        echo "Check to see if it's plugged in"
        echo "If it's plugged in, unplug it and plug it in again"
    fi
}

function lockUSBDrive {
    udisksctl unmount -b /dev/disk/by-label/${encryptedDriveName} 
	udisksctl lock -b /dev/disk/by-partlabel/${encryptedDriveName}
	if [ $? -eq 0 ]; then
        echo ""
        echo "Usbkey locked"
    else
        echo ""
        echo "Usbkey failed to lock"
        echo ""
        echo "Check to see if it's plugged in"
        echo "If it's plugged in, unplug it and plug it in again"
    fi
}

function shutdownUSBDrive {
    udisksctl unmount -b /dev/disk/by-label/${encryptedDriveName} 
    udisksctl lock -b /dev/disk/by-partlabel/${encryptedDriveName}
    udisksctl power-off -b /dev/disk/by-partlabel/${encryptedDriveName}
    if [ $? -eq 0 ]; then
        echo ""
        echo "Usbkey shutdown"
    else
        echo ""
        echo "Usbkey failed to shutdown"
    fi
}

if [ "$1" = "unlock" ]; then
	unlockUSBDrive
elif [ "$1" = "ssh" ]; then
    ssh-add /media/$USER/${encryptedDriveName}/id_rsa
elif [ "$1" = "go" ]; then
    unlockUSBDrive
    loadSSHKey
elif [ "$1" = "lock" ]; then
	lockUSBDrive
elif [ "$1" = "shutdown" ]; then
    shutdownUSBDrive
else
	echo "usage: unlock -- decrypt and mount your usbkey"
	echo "usage: ssh -- load SSH key from your usbkey"
	echo "usage: go -- shortcut to run both 'unlock' and 'ssh'"
	echo ""
	echo "usage: lock -- encrypt and unmount your usbkey"
	echo "usage: shutdown -- encrypt, unmount, and disable your usbkey until removed and replaced"
fi
