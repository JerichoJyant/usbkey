#!/bin/bash

defaultEncryptedDriveName="keysandbackups"
if [ -z "$2" ]; then
    # no second parameter
    encryptedDriveName=$defaultEncryptedDriveName
else 
    # second paramter
    encryptedDriveName=$2
fi


function unlockUSBDrive {
    unlockOutput=$(udisksctl unlock -b /dev/disk/by-partlabel/${encryptedDriveName} 2>&1 >/dev/null)
    if  [[ $unlockOutput == *"already unlocked"* ]]; then
        echo "USBKey already unlocked"
    elif [[ $unlockOutput == *"not permitted"* ]]; then
        echo "Passphrase incorrect"
    elif [[ $unlockOutput == *"Error looking up"* ]]; then
        echo "USBKey '$encryptedDriveName' not found"
        echo "Check to see that it's plugged in"
        echo "If it's plugged in, remove and reinsert it and try again"
    else 
        echo "USBKey unlocked"
        mountOutput=$(udisksctl mount -b /dev/disk/by-label/${encryptedDriveName} 2>&1 >/dev/null)
        if [ $? -eq 0 ]; then
            echo "USBKey mounted"
        else
            echo ""
            echo "USBKey failed to mount:"
            echo $mountOutput
        fi
    fi
}

function loadSSHKey {
    ssh-add /media/$USER/${encryptedDriveName}/id_rsa
}

function lockUSBDrive {
    udisksctl unmount -b /dev/disk/by-label/${encryptedDriveName} 
    udisksctl lock -b /dev/disk/by-partlabel/${encryptedDriveName}
    if [ $? -eq 0 ]; then
        echo ""
        echo "Usbkey locked"
    else
        echo ""
        echo "Usbkey failed to lock"
        echo ""
        echo "Check to see if it's plugged in"
        echo "If it's plugged in, unplug it and plug it in again"
    fi
}

function shutdownUSBDrive {
    udisksctl unmount -b /dev/disk/by-label/${encryptedDriveName} 
    udisksctl lock -b /dev/disk/by-partlabel/${encryptedDriveName}
    udisksctl power-off -b /dev/disk/by-partlabel/${encryptedDriveName}
    if [ $? -eq 0 ]; then
        echo ""
        echo "Usbkey shutdown"
    else
        echo ""
        echo "Usbkey failed to shutdown"
    fi
}

function printSetupHelp {
    echo "USBKey device setup:"
    echo ""
    echo "Any removable storage device may become a USBKey"
    echo "Please follow the instructions in README.md"
    echo ""
    echo "The most up to date README.md can be found on the usbkey-script GitHub at:"
    echo "  https://github.com/JerichoJyant/usbkey-script"
}

if [ "$1" = "unlock" ]; then
	unlockUSBDrive
elif [ "$1" = "ssh" ]; then
    loadSSHKey
elif [ "$1" = "go" ]; then
    unlockUSBDrive
    echo ""
    loadSSHKey
elif [ "$1" = "lock" ]; then
	lockUSBDrive
elif [ "$1" = "shutdown" ]; then
    shutdownUSBDrive
elif [ "$1" = "setup" ]; then
    printSetupHelp
else
    echo "Usage: usbkey command [nameOfDrive]"
    echo "  [nameOfDrive] defaults to \"$defaultEncryptedDriveName\""
    echo ""
    echo "Commands:"
	echo "  unlock -- Decrypt and mount your USBKey"
	echo "  ssh -- Load SSH key from your USBKey"
	echo "  go -- Shortcut to run both 'unlock' and 'ssh'"
	echo ""
	echo "  lock -- Encrypt and unmount your USBKey"
	echo "  shutdown -- Encrypt, unmount, and disable your USBKey until removed and replaced"
    echo ""
    echo "  setup -- Show help for creating a USBKey"
fi